@inject SharpHomeServer.Data.IReadingProvider provider;
@inject SharpHomeServer.Data.IChartDataProvider chartProvider;

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">SharpHomeServer</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>

        @foreach (var chart in charts)
        {

            <li class="nav-item px-3">
                <NavLink class="nav-link" href=@{$"data/{Uri.EscapeDataString(chart.DocumentId)}/{chart.TimeSeries}"}>
                    <span class="oi oi-list-rich" aria-hidden="true"></span> @chart.Name
                </NavLink>
            </li>
        }

    <li class="nav-item px-3">
        <NavLink class="nav-link" href=@{$"yesterday"}>
            <span class="oi oi-list-rich" aria-hidden="true"></span> yesterday
        </NavLink>
    </li>

</ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    List<string> readings = new List<string>();

    List<ChartOption> charts = new List<ChartOption>();

    protected override async Task OnInitializedAsync()
    {
        readings = await provider.GetReadingTypesAsync();
        charts = chartProvider.Charts.Charts;
    }
}
